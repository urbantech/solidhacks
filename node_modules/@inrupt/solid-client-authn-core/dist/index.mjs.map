{"version":3,"file":"index.mjs","sources":["../src/constant.ts","../src/SessionEventListener.ts","../src/util/handlerPattern/AggregateHandler.ts","../src/util/token.ts","../src/login/oidc/validateRedirectIri.ts","../src/login/oidc/oidcHandlers/AuthorizationCodeWithPkceOidcHandler.ts","../src/logout/GeneralLogoutHandler.ts","../src/logout/RpLogoutHandler.ts","../src/logout/IWaterfallLogoutHandler.ts","../src/sessionInfo/SessionInfoManager.ts","../src/logout/endSessionUrl.ts","../src/sessionInfo/ISessionInfo.ts","../src/sessionInfo/ISessionInfoManager.ts","../src/login/oidc/IClientRegistrar.ts","../src/ClientAuthentication.ts","../src/storage/StorageUtility.ts","../src/storage/InMemoryStorage.ts","../src/errors/ConfigurationError.ts","../src/errors/NotImplementedError.ts","../src/errors/InvalidResponseError.ts","../src/errors/OidcProviderError.ts","../src/authenticatedFetch/dpopUtils.ts","../src/authenticatedFetch/fetchFactory.ts","../src/storage/__mocks__/StorageUtility.ts"],"sourcesContent":["//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * Intended to be used by dependent packages as a common prefix for keys into\n * storage mechanisms (so as to group all keys related to Solid Client Authn\n * within those storage mechanisms, e.g., window.localStorage).\n */\nexport const SOLID_CLIENT_AUTHN_KEY_PREFIX = \"solidClientAuthn:\";\n\n/**\n * Ordered list of signature algorithms, from most preferred to least preferred.\n */\nexport const PREFERRED_SIGNING_ALG = [\"ES256\", \"RS256\"];\n\nexport const EVENTS = {\n  // Note that an `error` events MUST be listened to: https://nodejs.org/dist/latest-v16.x/docs/api/events.html#error-events.\n  ERROR: \"error\",\n  LOGIN: \"login\",\n  LOGOUT: \"logout\",\n  NEW_REFRESH_TOKEN: \"newRefreshToken\",\n  SESSION_EXPIRED: \"sessionExpired\",\n  SESSION_EXTENDED: \"sessionExtended\",\n  SESSION_RESTORED: \"sessionRestore\",\n  TIMEOUT_SET: \"timeoutSet\",\n} as const;\n/**\n * We want to refresh a token 5 seconds before it expires.\n */\nexport const REFRESH_BEFORE_EXPIRATION_SECONDS = 5;\n\n// The openid scope requests an OIDC ID token token to be returned.\nconst SCOPE_OPENID = \"openid\";\n// The offline_access scope requests a refresh token to be returned.\nconst SCOPE_OFFLINE = \"offline_access\";\n// The webid scope is required as per https://solid.github.io/solid-oidc/#webid-scope\nconst SCOPE_WEBID = \"webid\";\n// The scopes are expected as a space-separated list.\nexport const DEFAULT_SCOPES = [SCOPE_OPENID, SCOPE_OFFLINE, SCOPE_WEBID].join(\n  \" \",\n);\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport { EventEmitter } from \"events\";\nimport type { EVENTS } from \"./constant\";\n\nexport interface IHasSessionEventListener {\n  events: ISessionEventListener;\n}\n\n// These types help preventing inconsistencies between on, once and off.\ntype LOGIN_ARGS = { eventName: typeof EVENTS.LOGIN; listener: () => void };\ntype LOGOUT_ARGS = { eventName: typeof EVENTS.LOGOUT; listener: () => void };\ntype SESSION_EXPIRED_ARGS = {\n  eventName: typeof EVENTS.SESSION_EXPIRED;\n  listener: () => void;\n};\ntype SESSION_RESTORED_ARGS = {\n  eventName: typeof EVENTS.SESSION_RESTORED;\n  listener: (currentUrl: string) => unknown;\n};\ntype ERROR_ARGS = {\n  eventName: typeof EVENTS.ERROR;\n  listener: (error: string | null, errorDescription?: string | null) => unknown;\n};\ntype SESSION_EXTENDED_ARGS = {\n  eventName: typeof EVENTS.SESSION_EXTENDED;\n  listener: (expiresIn: number) => void;\n};\ntype TIMEOUT_SET_ARGS = {\n  eventName: typeof EVENTS.TIMEOUT_SET;\n  listener: (timeoutId: number) => void;\n};\ntype NEW_REFRESH_TOKEN_ARGS = {\n  eventName: typeof EVENTS.NEW_REFRESH_TOKEN;\n  listener: (newToken: string) => void;\n};\ntype FALLBACK_ARGS = {\n  eventName: Parameters<InstanceType<typeof EventEmitter>[\"on\"]>[0];\n  // Prevents from using a SessionEventEmitter as an aritrary EventEmitter.\n  listener: never;\n};\n\nexport interface ISessionEventListener extends EventEmitter {\n  /**\n   * Register a listener called on successful login.\n   * @param eventName The login event name\n   * @param listener The callback called on successful login\n   */\n  on(\n    eventName: LOGIN_ARGS[\"eventName\"],\n    listener: LOGIN_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on successful logout.\n   * @param eventName The logout event name.\n   * @param listener The callback called on successful logout.\n   */\n  on(\n    eventName: LOGOUT_ARGS[\"eventName\"],\n    listener: LOGOUT_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on session expiration.\n   * @param eventName The session expiration event name.\n   * @param listener The callback called on session expiration.\n   */\n  on(\n    eventName: SESSION_EXPIRED_ARGS[\"eventName\"],\n    listener: SESSION_EXPIRED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on session restoration after a silent login.\n   * @param eventName The session restoration event name.\n   * @param listener The callback called on successful session restore.\n   */\n  on(\n    eventName: SESSION_RESTORED_ARGS[\"eventName\"],\n    listener: SESSION_RESTORED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on error, with an error identifier and description.\n   * @param eventName The error event name.\n   * @param listener The callback called on error.\n   */\n  on(\n    eventName: ERROR_ARGS[\"eventName\"],\n    listener: ERROR_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on session extension.\n   * @param eventName The session extension event name.\n   * @param listener The callback called on session extension.\n   */\n  on(\n    eventName: SESSION_EXTENDED_ARGS[\"eventName\"],\n    listener: SESSION_EXTENDED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called when a timeout is set for a session event with\n   * the timeout handle.\n   * @param eventName The timeout set event name.\n   * @param listener The callback called when setting a timeout.\n   */\n  on(\n    eventName: TIMEOUT_SET_ARGS[\"eventName\"],\n    listener: TIMEOUT_SET_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called when a new refresh token is issued for the session.\n   * @param eventName The new refresh token issued event name.\n   * @param listener The callback called when a new refresh token is issued.\n   */\n  on(\n    eventName: NEW_REFRESH_TOKEN_ARGS[\"eventName\"],\n    listener: NEW_REFRESH_TOKEN_ARGS[\"listener\"],\n  ): this;\n  /**\n   * @hidden This is a fallback constructor overriding the EventEmitter behavior.\n   *  It shouldn\"t be in the API docs.\n   */\n  on(\n    eventName: FALLBACK_ARGS[\"eventName\"],\n    listener: FALLBACK_ARGS[\"listener\"],\n  ): this;\n\n  /**\n   * Register a listener called on successful login.\n   * @param eventName The login event name\n   * @param listener The callback called on successful login\n   */\n  addListener(\n    eventName: LOGIN_ARGS[\"eventName\"],\n    listener: LOGIN_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on successful logout.\n   * @param eventName The logout event name.\n   * @param listener The callback called on successful logout.\n   */\n  addListener(\n    eventName: LOGOUT_ARGS[\"eventName\"],\n    listener: LOGOUT_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on session expiration.\n   * @param eventName The session expiration event name.\n   * @param listener The callback called on session expiration.\n   */\n  addListener(\n    eventName: SESSION_EXPIRED_ARGS[\"eventName\"],\n    listener: SESSION_EXPIRED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on session restoration after a silent login.\n   * @param eventName The session restoration event name.\n   * @param listener The callback called on successful session restore.\n   */\n  addListener(\n    eventName: SESSION_RESTORED_ARGS[\"eventName\"],\n    listener: SESSION_RESTORED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on error, with an error identifier and description.\n   * @param eventName The error event name.\n   * @param listener The callback called on error.\n   */\n  addListener(\n    eventName: ERROR_ARGS[\"eventName\"],\n    listener: ERROR_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on session extension.\n   * @param eventName The session extension event name.\n   * @param listener The callback called on session extension.\n   */\n  addListener(\n    eventName: SESSION_EXTENDED_ARGS[\"eventName\"],\n    listener: SESSION_EXTENDED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called when a timeout is set for a session event with\n   * the timeout handle.\n   * @param eventName The timeout set event name.\n   * @param listener The callback called when setting a timeout.\n   */\n  addListener(\n    eventName: TIMEOUT_SET_ARGS[\"eventName\"],\n    listener: TIMEOUT_SET_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called when a new refresh token is issued for the session.\n   * @param eventName The new refresh token issued event name.\n   * @param listener The callback called when a new refresh token is issued.\n   */\n  addListener(\n    eventName: NEW_REFRESH_TOKEN_ARGS[\"eventName\"],\n    listener: NEW_REFRESH_TOKEN_ARGS[\"listener\"],\n  ): this;\n  /**\n   * @hidden This is a fallback constructor overriding the EventEmitter behavior.\n   *  It shouldn\"t be in the API docs.\n   */\n  addListener(\n    eventName: FALLBACK_ARGS[\"eventName\"],\n    listener: FALLBACK_ARGS[\"listener\"],\n  ): this;\n\n  /**\n   * Register a listener called on the next successful login with the logged in WebID.\n   * @param eventName The login event name.\n   * @param listener The callback called on the next successful login.\n   */\n  once(\n    eventName: LOGIN_ARGS[\"eventName\"],\n    listener: LOGIN_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on the next successful logout.\n   * @param eventName The logout event name.\n   * @param listener The callback called on the next successful logout.\n   */\n  once(\n    eventName: LOGOUT_ARGS[\"eventName\"],\n    listener: LOGOUT_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on the next session expiration.\n   * @param eventName The session expiration event name.\n   * @param listener The callback called on the next session expiration.\n   */\n  once(\n    eventName: SESSION_EXPIRED_ARGS[\"eventName\"],\n    listener: SESSION_EXPIRED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on the next session restoration after a silent login.\n   * @param eventName The session restoration event name.\n   * @param listener The callback called on the next successful session restore.\n   */\n  once(\n    eventName: SESSION_RESTORED_ARGS[\"eventName\"],\n    listener: SESSION_RESTORED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on the next error, with an error identifier and description.\n   * @param eventName The error event name.\n   * @param listener The callback called on the next error.\n   */\n  once(\n    eventName: ERROR_ARGS[\"eventName\"],\n    listener: ERROR_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called on the next session extension.\n   * @param eventName The session extension event name.\n   * @param listener The callback called on the next session extension.\n   */\n  once(\n    eventName: SESSION_EXTENDED_ARGS[\"eventName\"],\n    listener: SESSION_EXTENDED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called the next time a timeout is set for a session event\n   * with the timeout handle.\n   * @param eventName The timeout set event name.\n   * @param listener The callback called when next setting a timeout.\n   */\n  once(\n    eventName: TIMEOUT_SET_ARGS[\"eventName\"],\n    listener: TIMEOUT_SET_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Register a listener called the next time a new refresh token is issued for\n   * the session.\n   * @param eventName The new refresh token issued event name.\n   * @param listener The callback called next time a new refresh token is issued.\n   */\n  once(\n    eventName: NEW_REFRESH_TOKEN_ARGS[\"eventName\"],\n    listener: NEW_REFRESH_TOKEN_ARGS[\"listener\"],\n  ): this;\n  /**\n   * @hidden This is a fallback constructor overriding the EventEmitter behavior.\n   *  It shouldn\"t be in the API docs.\n   */\n  once(\n    eventName: FALLBACK_ARGS[\"eventName\"],\n    listener: FALLBACK_ARGS[\"listener\"],\n  ): this;\n\n  /**\n   * Unegister a listener called on successful login with the logged in WebID.\n   * @param eventName The login event name.\n   * @param listener The callback to unregister.\n   */\n  off(\n    eventName: LOGIN_ARGS[\"eventName\"],\n    listener: LOGIN_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called on successful logout.\n   * @param eventName The logout event name.\n   * @param listener The callback to unregister.\n   */\n  off(\n    eventName: LOGOUT_ARGS[\"eventName\"],\n    listener: LOGOUT_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called on session expiration.\n   * @param eventName The session expiration event name.\n   * @param listener The callback to unregister.\n   */\n  off(\n    eventName: SESSION_EXPIRED_ARGS[\"eventName\"],\n    listener: SESSION_EXPIRED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called on session restoration after a silent login.\n   * @param eventName The session restoration event name.\n   * @param listener The callback to unregister.\n   */\n  off(\n    eventName: SESSION_RESTORED_ARGS[\"eventName\"],\n    listener: SESSION_RESTORED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called on error, with an error identifier and description.\n   * @param eventName The error event name.\n   * @param listener The callback to unregister.\n   */\n  off(\n    eventName: ERROR_ARGS[\"eventName\"],\n    listener: ERROR_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called on session extension.\n   * @param eventName The session extension event name.\n   * @param listener The callback to unregister.\n   */\n  off(\n    eventName: SESSION_EXTENDED_ARGS[\"eventName\"],\n    listener: SESSION_EXTENDED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called when a timeout is set for a session event.\n   * @param eventName The timeout set event name.\n   * @param listener The callback called when next setting a timeout.\n   */\n  off(\n    eventName: TIMEOUT_SET_ARGS[\"eventName\"],\n    listener: TIMEOUT_SET_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called when a new refresh token is issued.\n   * @param eventName The new refresh token issued event name.\n   * @param listener The callback called next time a new refresh token is issued.\n   */\n  off(\n    eventName: NEW_REFRESH_TOKEN_ARGS[\"eventName\"],\n    listener: NEW_REFRESH_TOKEN_ARGS[\"listener\"],\n  ): this;\n  /**\n   * @hidden This is a fallback constructor overriding the EventEmitter behavior.\n   *  It shouldn\"t be in the API docs.\n   */\n  off(\n    eventName: FALLBACK_ARGS[\"eventName\"],\n    listener: FALLBACK_ARGS[\"listener\"],\n  ): this;\n\n  /**\n   * Unegister a listener called on successful login with the logged in WebID.\n   * @param eventName The login event name.\n   * @param listener The callback to unregister.\n   */\n  removeListener(\n    eventName: LOGIN_ARGS[\"eventName\"],\n    listener: LOGIN_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called on successful logout.\n   * @param eventName The logout event name.\n   * @param listener The callback to unregister.\n   */\n  removeListener(\n    eventName: LOGOUT_ARGS[\"eventName\"],\n    listener: LOGOUT_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called on session expiration.\n   * @param eventName The session expiration event name.\n   * @param listener The callback to unregister.\n   */\n  removeListener(\n    eventName: SESSION_EXPIRED_ARGS[\"eventName\"],\n    listener: SESSION_EXPIRED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called on session restoration after a silent login.\n   * @param eventName The session restoration event name.\n   * @param listener The callback to unregister.\n   */\n  removeListener(\n    eventName: SESSION_RESTORED_ARGS[\"eventName\"],\n    listener: SESSION_RESTORED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called on error, with an error identifier and description.\n   * @param eventName The error event name.\n   * @param listener The callback to unregister.\n   */\n  removeListener(\n    eventName: ERROR_ARGS[\"eventName\"],\n    listener: ERROR_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called on session extension.\n   * @param eventName The session extension event name.\n   * @param listener The callback to unregister.\n   */\n  removeListener(\n    eventName: SESSION_EXTENDED_ARGS[\"eventName\"],\n    listener: SESSION_EXTENDED_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called when a timeout is set for a session event.\n   * @param eventName The timeout set event name.\n   * @param listener The callback called when next setting a timeout.\n   */\n  removeListener(\n    eventName: TIMEOUT_SET_ARGS[\"eventName\"],\n    listener: TIMEOUT_SET_ARGS[\"listener\"],\n  ): this;\n  /**\n   * Unegister a listener called when a new refresh token is issued.\n   * @param eventName The new refresh token issued event name.\n   * @param listener The callback called next time a new refresh token is issued.\n   */\n  removeListener(\n    eventName: NEW_REFRESH_TOKEN_ARGS[\"eventName\"],\n    listener: NEW_REFRESH_TOKEN_ARGS[\"listener\"],\n  ): this;\n  /**\n   * @hidden This is a fallback constructor overriding the EventEmitter behavior.\n   *  It shouldn\"t be in the API docs.\n   */\n  removeListener(\n    eventName: FALLBACK_ARGS[\"eventName\"],\n    listener: FALLBACK_ARGS[\"listener\"],\n  ): this;\n\n  /**\n   * @hidden This is a fallback overriding the EventEmitter behavior.\n   *  It shouldn\"t be in the API docs.\n   */\n  emit(eventName: never, ...args: never): boolean;\n}\n\n/**\n * Temporary internal builder for safe proxying.\n */\nexport const buildProxyHandler = (\n  // The class to be excluded needs to be injected, because it is defined in a\n  // dependency.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  toExclude: any,\n  errorMessage: string,\n) => ({\n  // This proxy is only a temporary measure until Session no longer extends\n  // SessionEventEmitter, and the proxying is no longer necessary.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(target: any, prop: any, receiver: any) {\n    // Reject any calls to the proxy that isn't specific to the EventEmitter API\n    if (\n      !Object.getOwnPropertyNames(EventEmitter).includes(prop) &&\n      Object.getOwnPropertyNames(toExclude).includes(prop)\n    ) {\n      throw new Error(`${errorMessage}: [${prop}] is not supported`);\n    }\n    return Reflect.get(target, prop, receiver);\n  },\n});\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * An abstract class that will select the first handler that can handle certain parameters\n */\nimport type IHandleable from \"./IHandleable\";\n\n/**\n * @hidden\n */\nexport default class AggregateHandler<P extends Array<unknown>, R>\n  implements IHandleable<P, R>\n{\n  constructor(private handleables: IHandleable<P, R>[]) {\n    this.handleables = handleables;\n  }\n\n  /**\n   * Helper function that will asynchronously determine the proper handler to use. If multiple\n   * handlers can handle, it will choose the first one in the list\n   * @param params Paramerters to feed to the handler\n   */\n  private async getProperHandler(params: P): Promise<IHandleable<P, R> | null> {\n    // TODO : This function doesn't currently operate as described. Tests need to be written\n\n    // return new Promise<IHandleable<P, R> | null>((resolve, reject) => {\n    //  const resolvedValues: Array<boolean | null> = Array(this.handleables.length).map(() => null)\n    //   let numberResolved = 0\n    //   this.handleables.forEach(async (handleable: IHandleable<P, R>, index: number) => {\n    //     resolvedValues[index] = await handleable.canHandle(...params)\n    //     numberResolved++\n    //     let curResolvedValueIndex = 0\n    //     while (\n    //       resolvedValues[curResolvedValueIndex] !== null ||\n    //       resolvedValues[curResolvedValueIndex] !== undefined\n    //     ) {\n    //       if (resolvedValues[curResolvedValueIndex]) {\n    //         resolve(this.handleables[curResolvedValueIndex])\n    //       }\n    //       curResolvedValueIndex++\n    //     }\n    //   })\n    // })\n\n    const canHandleList = await Promise.all(\n      this.handleables.map((handleable) => handleable.canHandle(...params)),\n    );\n\n    for (let i = 0; i < canHandleList.length; i += 1) {\n      if (canHandleList[i]) {\n        return this.handleables[i];\n      }\n    }\n    return null;\n  }\n\n  async canHandle(...params: P): Promise<boolean> {\n    return (await this.getProperHandler(params)) !== null;\n  }\n\n  async handle(...params: P): Promise<R> {\n    const handler = await this.getProperHandler(params);\n    if (handler) {\n      return handler.handle(...params);\n    }\n\n    throw new Error(\n      `[${this.constructor.name}] cannot find a suitable handler for: ${params\n        .map((param) => {\n          try {\n            return JSON.stringify(param);\n          } catch (err) {\n            /* eslint-disable  @typescript-eslint/no-explicit-any */\n            return (param as any).toString();\n          }\n        })\n        .join(\", \")}`,\n    );\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n// eslint-disable-next-line no-shadow\nimport { fetch as uniFetch } from \"@inrupt/universal-fetch\";\nimport type { JWK, JWTPayload } from \"jose\";\nimport { jwtVerify, importJWK } from \"jose\";\n\ntype WithMessage = { message: string };\ntype WithStack = { stack: string };\n\nexport async function fetchJwks(\n  jwksIri: string,\n  issuerIri: string,\n): Promise<JWK> {\n  // FIXME: the following line works, but the underlying network calls don't seem\n  // to be mocked properly by our test code. It would be nicer to replace calls to this\n  // function by the following line and to fix the mocks.\n  // const jwks = createRemoteJWKSet(new URL(jwksIri));\n  const jwksResponse = await uniFetch.call(globalThis, jwksIri);\n  if (jwksResponse.status !== 200) {\n    throw new Error(\n      `Could not fetch JWKS for [${issuerIri}] at [${jwksIri}]: ${jwksResponse.status} ${jwksResponse.statusText}`,\n    );\n  }\n  // The JWKS should only contain the current key for the issuer.\n  let jwk: JWK;\n  try {\n    jwk = (await jwksResponse.json()).keys[0] as JWK;\n  } catch (e) {\n    throw new Error(\n      `Malformed JWKS for [${issuerIri}] at [${jwksIri}]: ${\n        (e as WithMessage).message\n      }`,\n    );\n  }\n  return jwk;\n}\n\n/**\n * Extract a WebID from an ID token payload based on https://github.com/solid/webid-oidc-spec.\n * Note that this does not yet implement the user endpoint lookup, and only checks\n * for `webid` or IRI-like `sub` claims.\n *\n * @param idToken the payload of the ID token from which the WebID can be extracted.\n * @returns a WebID extracted from the ID token.\n * @internal\n */\nexport async function getWebidFromTokenPayload(\n  idToken: string,\n  jwksIri: string,\n  issuerIri: string,\n  clientId: string,\n): Promise<string> {\n  const jwk = await fetchJwks(jwksIri, issuerIri);\n  let payload: JWTPayload;\n  try {\n    const { payload: verifiedPayload } = await jwtVerify(\n      idToken,\n      await importJWK(jwk),\n      {\n        issuer: issuerIri,\n        audience: clientId,\n      },\n    );\n    payload = verifiedPayload;\n  } catch (e) {\n    throw new Error(`Token verification failed: ${(e as WithStack).stack}`);\n  }\n\n  if (typeof payload.webid === \"string\") {\n    return payload.webid;\n  }\n  if (typeof payload.sub !== \"string\") {\n    throw new Error(\n      `The token ${JSON.stringify(\n        payload,\n      )} is invalid: it has no 'webid' claim and no 'sub' claim.`,\n    );\n  }\n  try {\n    // This parses the 'sub' claim to check if it is a well-formed IRI.\n    // However, the normalized value isn't returned to make sure the WebID is returned\n    // as specified by the Identity Provider.\n    // eslint-disable-next-line no-new\n    new URL(payload.sub);\n    return payload.sub;\n  } catch (e) {\n    throw new Error(\n      `The token has no 'webid' claim, and its 'sub' claim of [${payload.sub}] is invalid as a URL - error [${e}].`,\n    );\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nexport function isValidRedirectUrl(redirectUrl: string): boolean {\n  // If the redirect URL is not a valid URL, an error will be thrown.\n  try {\n    const urlObject = new URL(redirectUrl);\n    const noReservedQuery =\n      !urlObject.searchParams.has(\"code\") &&\n      !urlObject.searchParams.has(\"state\");\n    // As per https://tools.ietf.org/html/rfc6749#section-3.1.2, the redirect URL\n    // must not include a hash fragment.\n    const noHash = urlObject.hash === \"\";\n    return noReservedQuery && noHash;\n  } catch (e) {\n    return false;\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport type IStorageUtility from \"../../../storage/IStorageUtility\";\nimport type IOidcOptions from \"../IOidcOptions\";\nimport type { IRedirector } from \"../IRedirector\";\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * @hidden\n * Authorization code flow spec: https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth\n * PKCE: https://tools.ietf.org/html/rfc7636\n */\nexport default abstract class AuthorizationCodeWithPkceOidcHandlerBase {\n  constructor(\n    protected storageUtility: IStorageUtility,\n    protected redirector: IRedirector,\n  ) {\n    this.storageUtility = storageUtility;\n    this.redirector = redirector;\n  }\n\n  async canHandle(oidcLoginOptions: IOidcOptions): Promise<boolean> {\n    return !!(\n      oidcLoginOptions.issuerConfiguration.grantTypesSupported &&\n      oidcLoginOptions.issuerConfiguration.grantTypesSupported.indexOf(\n        \"authorization_code\",\n      ) > -1\n    );\n  }\n\n  async handleRedirect({\n    oidcLoginOptions,\n    state,\n    codeVerifier,\n    targetUrl,\n  }: {\n    oidcLoginOptions: IOidcOptions;\n    state: string;\n    codeVerifier: string;\n    targetUrl: string;\n  }) {\n    await Promise.all([\n      // We use the OAuth 'state' value (which should be crypto-random) as\n      // the key in our storage to store our actual SessionID. We do this\n      // 'cos we'll need to lookup our session information again when the\n      // browser is redirected back to us (i.e. the OAuth client\n      // application) from the Authorization Server.\n      // We don't want to use our session ID as the OAuth 'state' value, as\n      // that session ID can be any developer-specified value, and therefore\n      // may not be appropriate (since the OAuth 'state' value should really\n      // be an unguessable crypto-random value).\n      // eslint-disable-next-line no-underscore-dangle\n      this.storageUtility.setForUser(state, {\n        sessionId: oidcLoginOptions.sessionId,\n      }),\n\n      // Store our login-process state using the session ID as the key.\n      // Strictly speaking, this indirection from our OAuth state value to\n      // our session ID is unnecessary, but it provides a slightly cleaner\n      // separation of concerns.\n      this.storageUtility.setForUser(oidcLoginOptions.sessionId, {\n        // eslint-disable-next-line no-underscore-dangle\n        codeVerifier,\n        issuer: oidcLoginOptions.issuer.toString(),\n        // The redirect URL is read after redirect, so it must be stored now.\n        redirectUrl: oidcLoginOptions.redirectUrl,\n        dpop: oidcLoginOptions.dpop ? \"true\" : \"false\",\n      }),\n    ]);\n\n    this.redirector.redirect(targetUrl, {\n      handleRedirect: oidcLoginOptions.handleRedirect,\n    });\n\n    return undefined;\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport type ILogoutHandler from \"./ILogoutHandler\";\nimport type { ISessionInfoManager } from \"../sessionInfo/ISessionInfoManager\";\n\n/**\n * @hidden\n */\nexport default class GeneralLogoutHandler implements ILogoutHandler {\n  constructor(private sessionInfoManager: ISessionInfoManager) {\n    this.sessionInfoManager = sessionInfoManager;\n  }\n\n  async canHandle(): Promise<boolean> {\n    return true;\n  }\n\n  async handle(userId: string): Promise<void> {\n    await this.sessionInfoManager.clear(userId);\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport type ILogoutHandler from \"./ILogoutHandler\";\nimport type { IRedirector } from \"../login/oidc/IRedirector\";\nimport type { ILogoutHandlerOptions } from \"./ILogoutHandler\";\n\nexport default class IRpLogoutHandler implements ILogoutHandler {\n  constructor(protected redirector: IRedirector) {\n    this.redirector = redirector;\n  }\n\n  async canHandle(\n    userId: string,\n    options?: ILogoutHandlerOptions | undefined,\n  ): Promise<boolean> {\n    return options?.logoutType === \"idp\";\n  }\n\n  async handle(\n    userId: string,\n    options?: ILogoutHandlerOptions | undefined,\n  ): Promise<void> {\n    if (options?.logoutType !== \"idp\") {\n      throw new Error(\n        \"Attempting to call idp logout handler to perform app logout\",\n      );\n    }\n\n    if (options.toLogoutUrl === undefined) {\n      throw new Error(\n        \"Cannot perform IDP logout. Did you log in using the OIDC authentication flow?\",\n      );\n    }\n\n    this.redirector.redirect(options.toLogoutUrl(options), {\n      handleRedirect: options.handleRedirect,\n    });\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport type { ILogoutHandlerOptions } from \"./ILogoutHandler\";\nimport type ILogoutHandler from \"./ILogoutHandler\";\nimport GeneralLogoutHandler from \"./GeneralLogoutHandler\";\nimport IRpLogoutHandler from \"./RpLogoutHandler\";\nimport type { ISessionInfoManager } from \"../sessionInfo/ISessionInfoManager\";\nimport type { IRedirector } from \"../login/oidc/IRedirector\";\n\nexport default class IWaterfallLogoutHandler implements ILogoutHandler {\n  private handlers: ILogoutHandler[];\n\n  constructor(\n    sessionInfoManager: ISessionInfoManager,\n    redirector: IRedirector,\n  ) {\n    this.handlers = [\n      new GeneralLogoutHandler(sessionInfoManager),\n      new IRpLogoutHandler(redirector),\n    ];\n  }\n\n  async canHandle(): Promise<boolean> {\n    return true;\n  }\n\n  async handle(\n    userId: string,\n    options?: ILogoutHandlerOptions | undefined,\n  ): Promise<void> {\n    for (const handler of this.handlers) {\n      /* eslint-disable no-await-in-loop */\n      if (await handler.canHandle(userId, options))\n        await handler.handle(userId, options);\n      /* eslint-enable no-await-in-loop */\n    }\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport { v4 } from \"uuid\";\nimport { fetch as uniFetch } from \"@inrupt/universal-fetch\";\nimport type {\n  ISessionInfo,\n  ISessionInfoManager,\n  ISessionInternalInfo,\n  ISessionInfoManagerOptions,\n  IStorageUtility,\n} from \"..\";\n\nexport function getUnauthenticatedSession(): ISessionInfo & {\n  fetch: typeof uniFetch;\n} {\n  return {\n    isLoggedIn: false,\n    sessionId: v4(),\n    fetch: (...args) => uniFetch.call(globalThis, ...args),\n  };\n}\n\n/**\n * @param sessionId\n * @param storage\n * @hidden\n */\nexport async function clear(\n  sessionId: string,\n  storage: IStorageUtility,\n): Promise<void> {\n  await Promise.all([\n    storage.deleteAllUserData(sessionId, { secure: false }),\n    storage.deleteAllUserData(sessionId, { secure: true }),\n  ]);\n}\n\n/**\n * @hidden\n */\nexport abstract class SessionInfoManagerBase implements ISessionInfoManager {\n  constructor(protected storageUtility: IStorageUtility) {\n    this.storageUtility = storageUtility;\n  }\n\n  update(\n    _sessionId: string,\n    _options: ISessionInfoManagerOptions,\n  ): Promise<void> {\n    throw new Error(\"Not Implemented\");\n  }\n\n  get(_: string): Promise<(ISessionInfo & ISessionInternalInfo) | undefined> {\n    throw new Error(\"Not implemented\");\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getAll(): Promise<(ISessionInfo & ISessionInternalInfo)[]> {\n    throw new Error(\"Not implemented\");\n  }\n\n  /**\n   * This function removes all session-related information from storage.\n   * @param sessionId the session identifier\n   * @param storage the storage where session info is stored\n   * @hidden\n   */\n  async clear(sessionId: string): Promise<void> {\n    return clear(sessionId, this.storageUtility);\n  }\n\n  /**\n   * Registers a new session, so that its ID can be retrieved.\n   * @param sessionId\n   */\n  async register(_sessionId: string): Promise<void> {\n    throw new Error(\"Not implemented\");\n  }\n\n  /**\n   * Returns all the registered session IDs. Differs from getAll, which also\n   * returns additional session information.\n   */\n  async getRegisteredSessionIdAll(): Promise<string[]> {\n    throw new Error(\"Not implemented\");\n  }\n\n  /**\n   * Deletes all information about all sessions, including their registrations.\n   */\n  async clearAll(): Promise<void> {\n    throw new Error(\"Not implemented\");\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport type { IRpLogoutOptions } from \"./ILogoutHandler\";\n\nexport interface IEndSessionOptions {\n  endSessionEndpoint: string;\n  idTokenHint?: string;\n  postLogoutRedirectUri?: string;\n  state?: string;\n}\n\n/**\n * This function is designed to isomorphically capture the behavior in oidc-client-js and node-oidc-provider\n * - https://github.com/IdentityModel/oidc-client-js/blob/edec8f59897bdeedcb0b4167586d49626203c2c1/src/OidcClient.js#L138\n * - https://github.com/panva/node-openid-client/blob/35758419489ff751a71f5b66f5020087a63e1e88/lib/client.js#L284\n *\n * @param options IEndSessionOptions\n * @returns The URL to redirect to in order to perform RP Initiated Logout\n * @hidden\n */\nexport function getEndSessionUrl({\n  endSessionEndpoint,\n  idTokenHint,\n  postLogoutRedirectUri,\n  state,\n}: IEndSessionOptions) {\n  const url = new URL(endSessionEndpoint);\n\n  if (idTokenHint !== undefined)\n    url.searchParams.append(\"id_token_hint\", idTokenHint);\n\n  if (postLogoutRedirectUri !== undefined) {\n    url.searchParams.append(\"post_logout_redirect_uri\", postLogoutRedirectUri);\n    if (state !== undefined) url.searchParams.append(\"state\", state);\n  }\n\n  return url.toString();\n}\n\n/**\n * @param options.endSessionEndpoint The end_session_endpoint advertised by the server\n * @param options.idTokenHint The idToken supplied by the server after logging in\n * Redirects the window to the location required to perform RP initiated logout\n *\n * @hidden\n */\nexport function maybeBuildRpInitiatedLogout({\n  endSessionEndpoint,\n  idTokenHint,\n}: Partial<Omit<IEndSessionOptions, keyof IRpLogoutOptions>>) {\n  if (endSessionEndpoint === undefined) return undefined;\n\n  return function logout({ state, postLogoutUrl }: IRpLogoutOptions) {\n    return getEndSessionUrl({\n      endSessionEndpoint,\n      idTokenHint,\n      state,\n      postLogoutRedirectUri: postLogoutUrl,\n    });\n  };\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * Defines the data that should be persisted for each session. This interface\n * is exposed as part of our public API.\n */\nexport interface ISessionInfo {\n  /**\n   * 'true' if the session is currently logged into an associated identity\n   * provider.\n   */\n  isLoggedIn: boolean;\n\n  /**\n   * The WebID if the user is logged into the session, and undefined if not.\n   */\n  webId?: string;\n\n  /**\n   * The WebID of the app, or a \"Public app\" WebID if the app does not provide its own.\n   * undefined until the session is logged in and the app WebID has been verified.\n   */\n  clientAppId?: string;\n\n  /**\n   * A unique identifier for the session.\n   */\n  sessionId: string;\n\n  /**\n   * UNIX timestamp (number of milliseconds since Jan 1st 1970) representing the\n   * time until which this session is valid.\n   */\n  expirationDate?: number;\n}\n\n/**\n * Captures information about sessions that is persisted in storage, but that\n * should not be exposed as part of our public API, and is only used for\n * internal purposes. It is complementary to ISessionInfo when retrieving all\n * information about a stored session, both public and internal.\n */\nexport interface ISessionInternalInfo {\n  /**\n   * The refresh token associated with the session (if any).\n   */\n  refreshToken?: string;\n\n  /**\n   * The OIDC issuer that issued the tokens authenticating the session.\n   */\n  issuer?: string;\n\n  /**\n   * The redirect URL registered when initially logging the session in.\n   */\n  redirectUrl?: string;\n\n  /**\n   * For public clients, and Solid Identity Providers that do not support Client\n   * WebIDs, the client secret is still required at the token endpoint.\n   */\n  clientAppSecret?: string;\n\n  /**\n   * The token type used by the session\n   */\n  tokenType?: \"DPoP\" | \"Bearer\";\n}\n\nexport function isSupportedTokenType(\n  token: string | \"DPoP\" | \"Bearer\",\n): token is \"DPoP\" | \"Bearer\" {\n  return typeof token === \"string\" && [\"DPoP\", \"Bearer\"].includes(token);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport type { ISessionInfo, ISessionInternalInfo } from \"./ISessionInfo\";\n\n/**\n * @hidden\n */\nexport interface ISessionInfoManagerOptions {\n  loggedIn?: boolean;\n  webId?: string;\n}\n\n/**\n * @hidden\n */\nexport interface ISessionInfoManager {\n  update(sessionId: string, options: ISessionInfoManagerOptions): Promise<void>;\n  /**\n   * Returns all information about a registered session\n   * @param sessionId\n   */\n  get(\n    sessionId: string,\n  ): Promise<(ISessionInfo & ISessionInternalInfo) | undefined>;\n  /**\n   * Returns all information about all registered sessions\n   */\n  getAll(): Promise<(ISessionInfo & ISessionInternalInfo)[]>;\n  /**\n   * Registers a new session, so that its ID can be retrieved.\n   * @param sessionId\n   */\n  register(sessionId: string): Promise<void>;\n  /**\n   * Returns all the registered session IDs. Differs from getAll, which also\n   * returns additional session information.\n   */\n  getRegisteredSessionIdAll(): Promise<string[]>;\n  /**\n   * Deletes all information regarding one session, including its registration.\n   * @param sessionId\n   */\n  clear(sessionId: string): Promise<void>;\n  /**\n   * Deletes all information about all sessions, including their registrations.\n   */\n  clearAll(): Promise<void>;\n}\n\nexport const USER_SESSION_PREFIX = \"solidClientAuthenticationUser\";\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport type IStorageUtility from \"../../storage/IStorageUtility\";\nimport type ILoginOptions from \"../ILoginOptions\";\nimport type { ClientType, IClient } from \"./IClient\";\nimport type { IIssuerConfig } from \"./IIssuerConfig\";\n\nexport interface IClientRegistrarOptions {\n  sessionId: string;\n  clientName?: string;\n  redirectUrl?: string;\n}\n\n/**\n * @hidden\n */\nexport interface IClientRegistrar {\n  getClient(\n    options: IClientRegistrarOptions,\n    issuerConfig: IIssuerConfig,\n  ): Promise<IClient>;\n}\n\nfunction isValidUrl(url: string): boolean {\n  try {\n    // Here, the URL constructor is just called to parse the given string and\n    // verify if it is a well-formed IRI.\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function determineSigningAlg(\n  supported: string[],\n  preferred: string[],\n): string | null {\n  return (\n    preferred.find((signingAlg) => {\n      return supported.includes(signingAlg);\n    }) ?? null\n  );\n}\n\nfunction determineClientType(\n  options: ILoginOptions,\n  issuerConfig: IIssuerConfig,\n): ClientType {\n  if (options.clientId !== undefined && !isValidUrl(options.clientId)) {\n    return \"static\";\n  }\n  if (\n    issuerConfig.scopesSupported.includes(\"webid\") &&\n    options.clientId !== undefined &&\n    isValidUrl(options.clientId)\n  ) {\n    return \"solid-oidc\";\n  }\n  // If no client_id is provided, the client must go through Dynamic Client Registration.\n  // If a client_id is provided and it looks like a URI, yet the Identity Provider\n  // does *not* support Solid-OIDC, then we also perform DCR (and discard the\n  // provided client_id).\n  return \"dynamic\";\n}\n\nexport async function handleRegistration(\n  options: ILoginOptions,\n  issuerConfig: IIssuerConfig,\n  storageUtility: IStorageUtility,\n  clientRegistrar: IClientRegistrar,\n): Promise<IClient> {\n  const clientType = determineClientType(options, issuerConfig);\n  if (clientType === \"dynamic\") {\n    return clientRegistrar.getClient(\n      {\n        sessionId: options.sessionId,\n        clientName: options.clientName,\n        redirectUrl: options.redirectUrl,\n      },\n      issuerConfig,\n    );\n  }\n  // If a client_id was provided, and the Identity Provider is Solid-OIDC compliant,\n  // or it is not compliant but the client_id isn't an IRI (we assume it has already\n  // been registered with the IdP), then the client registration information needs\n  // to be stored so that it can be retrieved later after redirect.\n  await storageUtility.setForUser(options.sessionId, {\n    // If the client is either static or solid-oidc compliant, its client ID cannot be undefined.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    clientId: options.clientId!,\n  });\n  if (options.clientSecret) {\n    await storageUtility.setForUser(options.sessionId, {\n      clientSecret: options.clientSecret,\n    });\n  }\n  if (options.clientName) {\n    await storageUtility.setForUser(options.sessionId, {\n      clientName: options.clientName,\n    });\n  }\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    clientId: options.clientId!,\n    clientSecret: options.clientSecret,\n    clientName: options.clientName,\n    clientType,\n  };\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\nimport { fetch as uniFetch } from \"@inrupt/universal-fetch\";\nimport type { IIssuerConfigFetcher } from \"./login/oidc/IIssuerConfigFetcher\";\nimport type { ILogoutOptions, IRpLogoutOptions } from \"./logout/ILogoutHandler\";\nimport type ILogoutHandler from \"./logout/ILogoutHandler\";\nimport type ILoginHandler from \"./login/ILoginHandler\";\nimport type IIncomingRedirectHandler from \"./login/oidc/IIncomingRedirectHandler\";\nimport type { ISessionInfoManager } from \"./sessionInfo/ISessionInfoManager\";\nimport type {\n  ISessionInfo,\n  ISessionInternalInfo,\n} from \"./sessionInfo/ISessionInfo\";\n\n// By only referring to `window` at runtime, apps that do server-side rendering\n// won't run into errors when rendering code that instantiates a\n// ClientAuthentication:\nconst globalFetch: typeof uniFetch = (request, init) =>\n  uniFetch.call(globalThis, request, init);\n\n/**\n * @hidden\n */\nexport default class ClientAuthentication {\n  protected boundLogout?: (options: IRpLogoutOptions) => string;\n\n  constructor(\n    protected loginHandler: ILoginHandler,\n    protected redirectHandler: IIncomingRedirectHandler,\n    protected logoutHandler: ILogoutHandler,\n    protected sessionInfoManager: ISessionInfoManager,\n    protected issuerConfigFetcher?: IIssuerConfigFetcher,\n  ) {\n    this.loginHandler = loginHandler;\n    this.redirectHandler = redirectHandler;\n    this.logoutHandler = logoutHandler;\n    this.sessionInfoManager = sessionInfoManager;\n    this.issuerConfigFetcher = issuerConfigFetcher;\n  }\n\n  // By default, our fetch() resolves to the environment fetch() function.\n  fetch = globalFetch;\n\n  logout = async (\n    sessionId: string,\n    options?: ILogoutOptions,\n  ): Promise<void> => {\n    // When doing IDP logout this will redirect away from the current page, so we should not expect\n    // code after this condition to be run if it is true.\n    // We also need to make sure that any other cleanup that we want to do for\n    // our session takes place before this condition is run\n    await this.logoutHandler.handle(\n      sessionId,\n      options?.logoutType === \"idp\"\n        ? {\n            ...options,\n            toLogoutUrl: this.boundLogout,\n          }\n        : options,\n    );\n\n    // Restore our fetch() function back to the environment fetch(), effectively\n    // leaving us with un-authenticated fetches from now on.\n    this.fetch = globalFetch;\n\n    // Delete the bound logout function, so that it can't be called after this.\n    delete this.boundLogout;\n  };\n\n  getSessionInfo = async (\n    sessionId: string,\n  ): Promise<(ISessionInfo & ISessionInternalInfo) | undefined> => {\n    // TODO complete\n    return this.sessionInfoManager.get(sessionId);\n  };\n\n  getAllSessionInfo = async (): Promise<ISessionInfo[]> => {\n    return this.sessionInfoManager.getAll();\n  };\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * A helper class that will validate items taken from local storage\n */\nimport { exportJWK } from \"jose\";\nimport type IStorage from \"./IStorage\";\nimport type IStorageUtility from \"./IStorageUtility\";\nimport type { IIssuerConfig } from \"../login/oidc/IIssuerConfig\";\nimport type { IIssuerConfigFetcher } from \"../login/oidc/IIssuerConfigFetcher\";\nimport type { KeyPair } from \"../authenticatedFetch/dpopUtils\";\n\nexport type OidcContext = {\n  issuerConfig: IIssuerConfig;\n  codeVerifier?: string;\n  redirectUrl?: string;\n  dpop: boolean;\n};\n\nexport async function getSessionIdFromOauthState(\n  storageUtility: IStorageUtility,\n  oauthState: string,\n): Promise<string | undefined> {\n  return storageUtility.getForUser(oauthState, \"sessionId\");\n}\n\n/**\n * Based on the provided state, this looks up contextual information stored\n * before redirecting the user to the OIDC issuer.\n * @param sessionId The state (~ correlation ID) of the OIDC request\n * @param storageUtility\n * @param configFetcher\n * @returns Information stored about the client issuing the request\n */\nexport async function loadOidcContextFromStorage(\n  sessionId: string,\n  storageUtility: IStorageUtility,\n  configFetcher: IIssuerConfigFetcher,\n): Promise<OidcContext> {\n  try {\n    const [issuerIri, codeVerifier, storedRedirectIri, dpop] =\n      await Promise.all([\n        storageUtility.getForUser(sessionId, \"issuer\", {\n          errorIfNull: true,\n        }),\n        storageUtility.getForUser(sessionId, \"codeVerifier\"),\n        storageUtility.getForUser(sessionId, \"redirectUrl\"),\n        storageUtility.getForUser(sessionId, \"dpop\", { errorIfNull: true }),\n      ]);\n    // Clear the code verifier, which is one-time use.\n    await storageUtility.deleteForUser(sessionId, \"codeVerifier\");\n\n    // Unlike openid-client, this looks up the configuration from storage\n    const issuerConfig = await configFetcher.fetchConfig(issuerIri as string);\n    return {\n      codeVerifier,\n      redirectUrl: storedRedirectIri,\n      issuerConfig,\n      dpop: dpop === \"true\",\n    };\n  } catch (e) {\n    throw new Error(\n      `Failed to retrieve OIDC context from storage associated with session [${sessionId}]: ${e}`,\n    );\n  }\n}\n\n/**\n * Stores information about the session in the provided storage. Note that not\n * all storage are equally secure, and it is strongly advised not to store either\n * the refresh token or the DPoP key in the browser's local storage.\n *\n * @param storageUtility\n * @param sessionId\n * @param webId\n * @param isLoggedIn\n * @param refreshToken\n * @param secure\n * @param dpopKey\n */\nexport async function saveSessionInfoToStorage(\n  storageUtility: IStorageUtility,\n  sessionId: string,\n  webId?: string,\n  isLoggedIn?: string,\n  refreshToken?: string,\n  secure?: boolean,\n  dpopKey?: KeyPair,\n): Promise<void> {\n  // TODO: Investigate why this does not work with a Promise.all\n  if (refreshToken !== undefined) {\n    await storageUtility.setForUser(sessionId, { refreshToken }, { secure });\n  }\n  if (webId !== undefined) {\n    await storageUtility.setForUser(sessionId, { webId }, { secure });\n  }\n  if (isLoggedIn !== undefined) {\n    await storageUtility.setForUser(sessionId, { isLoggedIn }, { secure });\n  }\n  if (dpopKey !== undefined) {\n    await storageUtility.setForUser(\n      sessionId,\n      {\n        publicKey: JSON.stringify(dpopKey.publicKey),\n        privateKey: JSON.stringify(await exportJWK(dpopKey.privateKey)),\n      },\n      { secure },\n    );\n  }\n}\n\n// TOTEST: this does not handle all possible bad inputs for example what if it's not proper JSON\n/**\n * @hidden\n */\nexport default class StorageUtility implements IStorageUtility {\n  constructor(\n    private secureStorage: IStorage,\n    private insecureStorage: IStorage,\n  ) {\n    this.secureStorage = secureStorage;\n    this.insecureStorage = insecureStorage;\n  }\n\n  private getKey(userId: string): string {\n    return `solidClientAuthenticationUser:${userId}`;\n  }\n\n  private async getUserData(\n    userId: string,\n    secure?: boolean,\n  ): Promise<Record<string, string>> {\n    const stored = await (secure\n      ? this.secureStorage\n      : this.insecureStorage\n    ).get(this.getKey(userId));\n\n    if (stored === undefined) {\n      return {};\n    }\n\n    try {\n      return JSON.parse(stored);\n    } catch (err) {\n      throw new Error(\n        `Data for user [${userId}] in [${\n          secure ? \"secure\" : \"unsecure\"\n        }] storage is corrupted - expected valid JSON, but got: ${stored}`,\n      );\n    }\n  }\n\n  private async setUserData(\n    userId: string,\n    data: Record<string, string>,\n    secure?: boolean,\n  ): Promise<void> {\n    await (secure ? this.secureStorage : this.insecureStorage).set(\n      this.getKey(userId),\n      JSON.stringify(data),\n    );\n  }\n\n  async get(\n    key: string,\n    options?: { errorIfNull?: boolean; secure?: boolean },\n  ): Promise<string | undefined> {\n    const value = await (options?.secure\n      ? this.secureStorage\n      : this.insecureStorage\n    ).get(key);\n    if (value === undefined && options?.errorIfNull) {\n      throw new Error(`[${key}] is not stored`);\n    }\n    return value;\n  }\n\n  async set(\n    key: string,\n    value: string,\n    options?: { secure?: boolean },\n  ): Promise<void> {\n    return (options?.secure ? this.secureStorage : this.insecureStorage).set(\n      key,\n      value,\n    );\n  }\n\n  async delete(key: string, options?: { secure?: boolean }): Promise<void> {\n    return (options?.secure ? this.secureStorage : this.insecureStorage).delete(\n      key,\n    );\n  }\n\n  async getForUser(\n    userId: string,\n    key: string,\n    options?: { errorIfNull?: boolean; secure?: boolean },\n  ): Promise<string | undefined> {\n    const userData = await this.getUserData(userId, options?.secure);\n    let value;\n    if (!userData || !userData[key]) {\n      value = undefined;\n    }\n    value = userData[key];\n    if (value === undefined && options?.errorIfNull) {\n      throw new Error(`Field [${key}] for user [${userId}] is not stored`);\n    }\n    return value || undefined;\n  }\n\n  async setForUser(\n    userId: string,\n    values: Record<string, string>,\n    options?: { secure?: boolean },\n  ): Promise<void> {\n    let userData: Record<string, string>;\n    try {\n      userData = await this.getUserData(userId, options?.secure);\n    } catch {\n      // if reading the user data throws, the data is corrupted, and we want to write over it\n      userData = {};\n    }\n\n    await this.setUserData(userId, { ...userData, ...values }, options?.secure);\n  }\n\n  async deleteForUser(\n    userId: string,\n    key: string,\n    options?: { secure?: boolean },\n  ): Promise<void> {\n    const userData = await this.getUserData(userId, options?.secure);\n    delete userData[key];\n    await this.setUserData(userId, userData, options?.secure);\n  }\n\n  async deleteAllUserData(\n    userId: string,\n    options?: { secure?: boolean },\n  ): Promise<void> {\n    await (options?.secure ? this.secureStorage : this.insecureStorage).delete(\n      this.getKey(userId),\n    );\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport type IStorage from \"./IStorage\";\n\n/**\n * @hidden\n */\nexport default class InMemoryStorage implements IStorage {\n  private map: Record<string, string> = {};\n\n  async get(key: string): Promise<string | undefined> {\n    return this.map[key] || undefined;\n  }\n\n  async set(key: string, value: string): Promise<void> {\n    this.map[key] = value;\n  }\n\n  async delete(key: string): Promise<void> {\n    delete this.map[key];\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Error to be triggered when a poor configuration is received\n */\n\n// NOTE: There's a bug with istanbul and typescript that prevents full branch coverages\n// https://github.com/gotwarlost/istanbul/issues/690\n// The workaround is to put istanbul ignore on the constructor\n/**\n * @hidden\n */\nexport default class ConfigurationError extends Error {\n  /* istanbul ignore next */\n  constructor(message: string) {\n    super(message);\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Error to be triggered if a method is not implemented\n * @hidden\n */\nexport default class NotImplementedError extends Error {\n  /* istanbul ignore next */\n  constructor(methodName: string) {\n    super(`[${methodName}] is not implemented`);\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Error to be triggered when receiving a response missing mandatory elements\n */\n\n// NOTE: There's a bug with istanbul and typescript that prevents full branch coverages\n// https://github.com/gotwarlost/istanbul/issues/690\n// The workaround is to put istanbul ignore on the constructor\n/**\n * @hidden\n */\nexport class InvalidResponseError extends Error {\n  /* istanbul ignore next */\n  constructor(public readonly missingFields: string[]) {\n    super(\n      `Invalid response from OIDC provider: missing fields ${missingFields}`,\n    );\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Error to be triggered when receiving a response missing mandatory elements\n */\n\n// NOTE: There's a bug with istanbul and typescript that prevents full branch coverages\n// https://github.com/gotwarlost/istanbul/issues/690\n// The workaround is to put istanbul ignore on the constructor\n/**\n * @hidden\n */\nexport class OidcProviderError extends Error {\n  /* istanbul ignore next */\n  constructor(\n    message: string,\n    public readonly error: string,\n    public readonly errorDescription?: string,\n  ) {\n    super(message);\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { JWK, KeyLike } from \"jose\";\nimport { SignJWT, generateKeyPair, exportJWK } from \"jose\";\nimport { v4 } from \"uuid\";\nimport { PREFERRED_SIGNING_ALG } from \"../constant\";\n\n/**\n * Normalizes a URL in order to generate the DPoP token based on a consistent scheme.\n *\n * @param audience The URL to normalize.\n * @returns The normalized URL as a string.\n * @hidden\n */\nfunction normalizeHTU(audience: string): string {\n  const audienceUrl = new URL(audience);\n  return new URL(audienceUrl.pathname, audienceUrl.origin).toString();\n}\n\nexport type KeyPair = {\n  privateKey: KeyLike;\n  publicKey: JWK;\n};\n\n/**\n * Creates a DPoP header according to https://tools.ietf.org/html/draft-fett-oauth-dpop-04,\n * based on the target URL and method, using the provided key.\n *\n * @param audience Target URL.\n * @param method HTTP method allowed.\n * @param key Key used to sign the token.\n * @returns A JWT that can be used as a DPoP Authorization header.\n */\nexport async function createDpopHeader(\n  audience: string,\n  method: string,\n  dpopKey: KeyPair,\n): Promise<string> {\n  return new SignJWT({\n    htu: normalizeHTU(audience),\n    htm: method.toUpperCase(),\n    jti: v4(),\n  })\n    .setProtectedHeader({\n      alg: PREFERRED_SIGNING_ALG[0],\n      jwk: dpopKey.publicKey,\n      typ: \"dpop+jwt\",\n    })\n    .setIssuedAt()\n    .sign(dpopKey.privateKey, {});\n}\n\nexport async function generateDpopKeyPair(): Promise<KeyPair> {\n  const { privateKey, publicKey } = await generateKeyPair(\n    PREFERRED_SIGNING_ALG[0],\n  );\n  const dpopKeyPair = {\n    privateKey,\n    publicKey: await exportJWK(publicKey),\n  };\n  // The alg property isn't set by exportJWK, so set it manually.\n  [dpopKeyPair.publicKey.alg] = PREFERRED_SIGNING_ALG;\n  return dpopKeyPair;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n// eslint-disable-next-line no-shadow\nimport type { fetch } from \"@inrupt/universal-fetch\";\nimport { Headers } from \"@inrupt/universal-fetch\";\nimport type { EventEmitter } from \"events\";\nimport { REFRESH_BEFORE_EXPIRATION_SECONDS, EVENTS } from \"../constant\";\nimport type { ITokenRefresher } from \"../login/oidc/refresh/ITokenRefresher\";\nimport type { KeyPair } from \"./dpopUtils\";\nimport { createDpopHeader } from \"./dpopUtils\";\nimport { OidcProviderError } from \"../errors/OidcProviderError\";\nimport { InvalidResponseError } from \"../errors/InvalidResponseError\";\n\nexport type RefreshOptions = {\n  sessionId: string;\n  refreshToken: string;\n  tokenRefresher: ITokenRefresher;\n};\n\n/**\n * If expires_in isn't specified for the access token, we assume its lifetime is\n * 10 minutes.\n */\nexport const DEFAULT_EXPIRATION_TIME_SECONDS = 600;\n\nfunction isExpectedAuthError(statusCode: number): boolean {\n  // As per https://tools.ietf.org/html/rfc7235#section-3.1 and https://tools.ietf.org/html/rfc7235#section-3.1,\n  // a response failing because the provided credentials aren't accepted by the\n  // server can get a 401 or a 403 response.\n  return [401, 403].includes(statusCode);\n}\n\nexport type DpopHeaderPayload = {\n  htu: string;\n  htm: string;\n  jti: string;\n};\n\nasync function buildDpopFetchOptions(\n  targetUrl: string,\n  authToken: string,\n  dpopKey: KeyPair,\n  defaultOptions?: RequestInit,\n): Promise<RequestInit> {\n  const headers = new Headers(defaultOptions?.headers);\n  // Any pre-existing Authorization header should be overriden.\n  headers.set(\"Authorization\", `DPoP ${authToken}`);\n  headers.set(\n    \"DPoP\",\n    await createDpopHeader(targetUrl, defaultOptions?.method ?? \"get\", dpopKey),\n  );\n  return {\n    ...defaultOptions,\n    headers,\n  };\n}\n\nasync function buildAuthenticatedHeaders(\n  targetUrl: string,\n  authToken: string,\n  dpopKey?: KeyPair,\n  defaultOptions?: RequestInit,\n): Promise<RequestInit> {\n  if (dpopKey !== undefined) {\n    return buildDpopFetchOptions(targetUrl, authToken, dpopKey, defaultOptions);\n  }\n  const headers = new Headers(defaultOptions?.headers);\n  // Any pre-existing Authorization header should be overriden.\n  headers.set(\"Authorization\", `Bearer ${authToken}`);\n  return {\n    ...defaultOptions,\n    headers,\n  };\n}\n\nasync function makeAuthenticatedRequest(\n  unauthFetch: typeof fetch,\n  accessToken: string,\n  url: RequestInfo | URL,\n  defaultRequestInit?: RequestInit,\n  dpopKey?: KeyPair,\n) {\n  return unauthFetch(\n    url,\n    await buildAuthenticatedHeaders(\n      url.toString(),\n      accessToken,\n      dpopKey,\n      defaultRequestInit,\n    ),\n  );\n}\n\nasync function refreshAccessToken(\n  refreshOptions: RefreshOptions,\n  dpopKey?: KeyPair,\n  eventEmitter?: EventEmitter,\n): Promise<{ accessToken: string; refreshToken?: string; expiresIn?: number }> {\n  const tokenSet = await refreshOptions.tokenRefresher.refresh(\n    refreshOptions.sessionId,\n    refreshOptions.refreshToken,\n    dpopKey,\n  );\n  eventEmitter?.emit(\n    EVENTS.SESSION_EXTENDED,\n    tokenSet.expiresIn ?? DEFAULT_EXPIRATION_TIME_SECONDS,\n  );\n  if (typeof tokenSet.refreshToken === \"string\") {\n    eventEmitter?.emit(EVENTS.NEW_REFRESH_TOKEN, tokenSet.refreshToken);\n  }\n  return {\n    accessToken: tokenSet.accessToken,\n    refreshToken: tokenSet.refreshToken,\n    expiresIn: tokenSet.expiresIn,\n  };\n}\n\n/**\n *\n * @param expiresIn Delay until the access token expires.\n * @returns a delay until the access token should be refreshed.\n */\nconst computeRefreshDelay = (expiresIn?: number): number => {\n  if (expiresIn !== undefined) {\n    return expiresIn - REFRESH_BEFORE_EXPIRATION_SECONDS > 0\n      ? // We want to refresh the token 5 seconds before they actually expire.\n        expiresIn - REFRESH_BEFORE_EXPIRATION_SECONDS\n      : expiresIn;\n  }\n  return DEFAULT_EXPIRATION_TIME_SECONDS;\n};\n\n/**\n * @param unauthFetch a regular fetch function, compliant with the WHATWG spec.\n * @param authToken an access token, either a Bearer token or a DPoP one.\n * @param options The option object may contain two objects: the DPoP key token\n * is bound to if applicable, and options to customise token renewal behaviour.\n *\n * @returns A fetch function that adds an appropriate Authorization header with\n * the provided token, and adds a DPoP header if applicable.\n */\nexport async function buildAuthenticatedFetch(\n  unauthFetch: typeof fetch,\n  accessToken: string,\n  options?: {\n    dpopKey?: KeyPair;\n    refreshOptions?: RefreshOptions;\n    expiresIn?: number;\n    eventEmitter?: EventEmitter;\n  },\n): Promise<typeof fetch> {\n  let currentAccessToken = accessToken;\n  let latestTimeout: Parameters<typeof clearTimeout>[0];\n  const currentRefreshOptions: RefreshOptions | undefined =\n    options?.refreshOptions;\n  // Setup the refresh timeout outside of the authenticated fetch, so that\n  // an idle app will not get logged out if it doesn't issue a fetch before\n  // the first expiration date.\n  if (currentRefreshOptions !== undefined) {\n    const proactivelyRefreshToken = async () => {\n      try {\n        const {\n          accessToken: refreshedAccessToken,\n          refreshToken,\n          expiresIn,\n        } = await refreshAccessToken(\n          currentRefreshOptions,\n          // If currentRefreshOptions is defined, options is necessarily defined too.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          options!.dpopKey,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          options!.eventEmitter,\n        );\n        // Update the tokens in the closure if appropriate.\n        currentAccessToken = refreshedAccessToken;\n        if (refreshToken !== undefined) {\n          currentRefreshOptions.refreshToken = refreshToken;\n        }\n        // Each time the access token is refreshed, we must plan fo the next\n        // refresh iteration.\n        clearTimeout(latestTimeout);\n        latestTimeout = setTimeout(\n          proactivelyRefreshToken,\n          computeRefreshDelay(expiresIn) * 1000,\n        );\n        // If currentRefreshOptions is defined, options is necessarily defined too.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        options!.eventEmitter?.emit(EVENTS.TIMEOUT_SET, latestTimeout);\n      } catch (e) {\n        // It is possible that an underlying library throws an error on refresh flow failure.\n        // If we used a log framework, the error could be logged at the `debug` level,\n        // but otherwise the failure of the refresh flow should not blow up in the user's\n        // face, so we just swallow the error.\n        if (e instanceof OidcProviderError) {\n          // The OIDC provider refused to refresh the access token and returned an error instead.\n          /* istanbul ignore next 100% coverage would require testing that nothing\n              happens here if the emitter is undefined, which is more cumbersome\n              than what it's worth. */\n          options?.eventEmitter?.emit(\n            EVENTS.ERROR,\n            e.error,\n            e.errorDescription,\n          );\n          /* istanbul ignore next 100% coverage would require testing that nothing\n            happens here if the emitter is undefined, which is more cumbersome\n            than what it's worth. */\n          options?.eventEmitter?.emit(EVENTS.SESSION_EXPIRED);\n        }\n        if (\n          e instanceof InvalidResponseError &&\n          e.missingFields.includes(\"access_token\")\n        ) {\n          // In this case, the OIDC provider returned a non-standard response, but\n          // did not specify that it was an error. We cannot refresh nonetheless.\n          /* istanbul ignore next 100% coverage would require testing that nothing\n            happens here if the emitter is undefined, which is more cumbersome\n            than what it's worth. */\n          options?.eventEmitter?.emit(EVENTS.SESSION_EXPIRED);\n        }\n      }\n    };\n    latestTimeout = setTimeout(\n      proactivelyRefreshToken,\n      // If currentRefreshOptions is defined, options is necessarily defined too.\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      computeRefreshDelay(options!.expiresIn) * 1000,\n    );\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    options!.eventEmitter?.emit(EVENTS.TIMEOUT_SET, latestTimeout);\n  } else if (options !== undefined && options.eventEmitter !== undefined) {\n    // If no refresh options are provided, the session expires when the access token does.\n    const expirationTimeout = setTimeout(\n      () => {\n        // The event emitter is always defined in our code, and it would be tedious\n        // to test for conditions when it is not.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        options.eventEmitter!.emit(EVENTS.SESSION_EXPIRED);\n      },\n      computeRefreshDelay(options.expiresIn) * 1000,\n    );\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    options.eventEmitter!.emit(EVENTS.TIMEOUT_SET, expirationTimeout);\n  }\n  return async (url, requestInit?): Promise<Response> => {\n    let response = await makeAuthenticatedRequest(\n      unauthFetch,\n      currentAccessToken,\n      url,\n      requestInit,\n      options?.dpopKey,\n    );\n\n    const failedButNotExpectedAuthError =\n      !response.ok && !isExpectedAuthError(response.status);\n    if (response.ok || failedButNotExpectedAuthError) {\n      // If there hasn't been a redirection, or if there has been a non-auth related\n      // issue, it should be handled at the application level\n      return response;\n    }\n    const hasBeenRedirected = response.url !== url;\n    if (hasBeenRedirected && options?.dpopKey !== undefined) {\n      // If the request failed for auth reasons, and has been redirected, we should\n      // replay it generating a DPoP header for the rediration target IRI. This\n      // doesn't apply to Bearer tokens, as the Bearer tokens aren't specific\n      // to a given resource and method, while the DPoP header (associated to a\n      // DPoP token) is.\n      response = await makeAuthenticatedRequest(\n        unauthFetch,\n        currentAccessToken,\n        // Replace the original target IRI (`url`) by the redirection target\n        response.url,\n        requestInit,\n        options.dpopKey,\n      );\n    }\n    return response;\n  };\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport StorageUtility from \"../StorageUtility\";\nimport type IStorage from \"../IStorage\";\nimport type IStorageUtility from \"../IStorageUtility\";\n\nexport const StorageUtilityGetResponse = \"getResponse\";\n\nexport const StorageUtilityMock: IStorageUtility = {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  get: async (key: string, options?: { errorIfNull?: boolean }) =>\n    StorageUtilityGetResponse,\n  set: async (key: string, value: string) => {\n    /* do nothing */\n  },\n  delete: async (key: string) => {\n    /* do nothing */\n  },\n  getForUser: async (\n    userId: string,\n    key: string,\n    options?: { errorIfNull?: boolean; secure?: boolean },\n  ) => StorageUtilityGetResponse,\n  setForUser: async (\n    userId: string,\n    values: Record<string, string>,\n    options?: { secure?: boolean },\n  ) => {\n    /* do nothing */\n  },\n  deleteForUser: async (\n    userId: string,\n    key: string,\n    options?: { secure?: boolean },\n  ) => {\n    /* do nothing */\n  },\n  deleteAllUserData: async (userId: string, options?: { secure?: boolean }) => {\n    /* do nothing */\n  },\n};\n\nexport const mockStorage = (\n  stored: Record<string, string | Record<string, string>>,\n): IStorage => {\n  const store = stored;\n  return {\n    get: async (key: string): Promise<string | undefined> => {\n      if (store[key] === undefined) {\n        return undefined;\n      }\n      if (typeof store[key] === \"string\") {\n        return store[key] as string;\n      }\n      return JSON.stringify(store[key]);\n    },\n    set: async (key: string, value: string): Promise<void> => {\n      store[key] = value;\n    },\n    delete: async (key: string): Promise<void> => {\n      delete store[key];\n    },\n  };\n};\n\nexport const mockStorageUtility = (\n  stored: Record<string, string | Record<string, string>>,\n  isSecure = false,\n): IStorageUtility => {\n  if (isSecure) {\n    return new StorageUtility(mockStorage(stored), mockStorage({}));\n  }\n  return new StorageUtility(mockStorage({}), mockStorage(stored));\n};\n"],"names":["uniFetch"],"mappings":"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"}